"use client"

import { useState, useEffect } from "react"
import { useRouter, useSearchParams } from "next/navigation"
import Link from "next/link"

export default function ForgotPasswordPage() {
  const [email, setEmail] = useState("")
  const [loading, setLoading] = useState(false)
  const [error, setError] = useState("")
  const [success, setSuccess] = useState(false)
  const router = useRouter()
  const searchParams = useSearchParams()

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ—à–∏–±–∫–∏ –∏–∑ URL
  useEffect(() => {
    const errorParam = searchParams.get('error')
    if (errorParam) {
      if (errorParam === 'link_expired') {
        setError('–°—Å—ã–ª–∫–∞ –¥–ª—è —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è –∏—Å—Ç–µ–∫–ª–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø—Ä–æ—Å–∏—Ç–µ –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É.')
      } else if (errorParam === 'access_denied') {
        setError('–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø—Ä–æ—Å–∏—Ç–µ –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É –¥–ª—è —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è.')
      } else {
        setError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Å—ã–ª–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.')
      }
    }
  }, [searchParams])

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è code_verifier –¥–ª—è PKCE flow
  function generateCodeVerifier(length = 128) {
    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~'
    let verifier = ''
    for (let i = 0; i < length; i++) {
      verifier += chars.charAt(Math.floor(Math.random() * chars.length))
    }
    return verifier
  }

  async function handleSubmit(e: React.FormEvent) {
    e.preventDefault()
    setError("")
    setLoading(true)
    
    try {
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º code_verifier –¥–ª—è PKCE flow
      const codeVerifier = generateCodeVerifier()
      localStorage.setItem('pkce_code_verifier', codeVerifier)
      
      console.log('üîë Generated code_verifier:', codeVerifier.substring(0, 20) + '...')
      console.log('üíæ Saved to localStorage')

      const response = await fetch('/api/auth/forgot-password', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ 
          email,
          codeVerifier // –ü–µ—Ä–µ–¥–∞–µ–º code_verifier –≤ API
        }),
      })

      const data = await response.json()

      if (!response.ok) {
        setError(data.error || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞')
        // –£–¥–∞–ª—è–µ–º code_verifier –ø—Ä–∏ –æ—à–∏–±–∫–µ
        localStorage.removeItem('pkce_code_verifier')
        return
      }

      setSuccess(true)
      
    } catch (error: any) {
      setError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞')
      // –£–¥–∞–ª—è–µ–º code_verifier –ø—Ä–∏ –æ—à–∏–±–∫–µ
      localStorage.removeItem('pkce_code_verifier')
    }
    
    setLoading(false)
  }

  if (success) {
    return (
      <div className="max-w-md w-full mx-auto mt-10 p-6 bg-white rounded-lg shadow-lg">
        <div className="text-center">
          <div className="text-green-600 text-4xl mb-4">‚úì</div>
          <h2 className="text-xl font-bold mb-4 text-green-600">–ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!</h2>
          <p className="text-gray-600 mb-4">
            –ú—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Å—Å—ã–ª–∫—É –¥–ª—è —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è –Ω–∞ –∞–¥—Ä–µ—Å <strong>{email}</strong>
          </p>
          <p className="text-sm text-gray-500 mb-6">
            –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç—É –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è.
          </p>
          
          <div className="space-y-2">
            <Link 
              href="/auth" 
              className="block w-full bg-orange-500 hover:bg-orange-600 text-white py-2 rounded text-center"
            >
              –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—Ö–æ–¥—É
            </Link>
            <button 
              onClick={() => {
                setSuccess(false)
                setEmail("")
              }}
              className="block w-full bg-gray-500 hover:bg-gray-600 text-white py-2 rounded"
            >
              –û—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â–µ —Ä–∞–∑
            </button>
          </div>
        </div>
      </div>
    )
  }

  return (
    <div className="max-w-md w-full mx-auto mt-10 p-6 bg-gradient-to-br from-purple-50 to-pink-100 rounded-lg shadow-lg border-2 border-purple-200">
      <div className="text-center mb-4">
        <div className="text-purple-600 text-2xl mb-2">üîë</div>
        <h2 className="text-xl font-bold text-purple-800">–ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?</h2>
        <p className="text-sm text-purple-600 mt-1">–°–±—Ä–æ—Å —á–µ—Ä–µ–∑ Supabase</p>
      </div>
      <p className="text-gray-600 mb-6 text-center">
        –í–≤–µ–¥–∏—Ç–µ –≤–∞—à email, –∏ –º—ã –æ—Ç–ø—Ä–∞–≤–∏–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è
      </p>
      
      <form onSubmit={handleSubmit} className="space-y-4">
        <input
          type="email"
          placeholder="E-mail"
          value={email}
          onChange={e => setEmail(e.target.value)}
          required
          autoComplete="email"
          name="email"
          id="email"
          className="w-full border-2 border-purple-200 rounded-lg px-4 py-3 focus:border-purple-500 focus:ring-2 focus:ring-purple-200 transition-colors"
          disabled={loading}
        />
        
        {error && (
          <div className="text-red-500 text-sm p-3 bg-red-50 border border-red-200 rounded-lg">
            <div className="font-medium mb-1">–û—à–∏–±–∫–∞:</div>
            <div>{error}</div>
            {error.includes('–Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω') && (
              <div className="mt-3">
                <Link 
                  href="/register" 
                  className="inline-block bg-orange-500 hover:bg-orange-600 text-white px-4 py-2 rounded text-sm"
                >
                  –ü–µ—Ä–µ–π—Ç–∏ –∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
                </Link>
              </div>
            )}
            {error.includes('–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤') && (
              <div className="mt-3 text-sm text-gray-600">
                <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ —á–µ—Ä–µ–∑ —á–∞—Å.</p>
                <p>–≠—Ç–æ –∑–∞—â–∏—Ç–∞ –æ—Ç —Å–ø–∞–º–∞.</p>
              </div>
            )}
          </div>
        )}
        
        <button 
          type="submit" 
          className="w-full bg-gradient-to-r from-purple-500 to-pink-600 hover:from-purple-600 hover:to-pink-700 text-white py-3 rounded-lg font-medium transition-all duration-200 shadow-lg hover:shadow-xl" 
          disabled={loading}
        >
          {loading ? "–û—Ç–ø—Ä–∞–≤–∫–∞..." : "–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –¥–ª—è —Å–±—Ä–æ—Å–∞"}
        </button>
        
        <div className="text-center">
          <Link href="/auth" className="text-purple-600 hover:text-purple-800 underline font-medium">
            –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—Ö–æ–¥—É
          </Link>
        </div>
      </form>
    </div>
  )
}
