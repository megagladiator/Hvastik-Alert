import { createClient } from '@/lib/supabase/server'
import { NextResponse } from 'next/server'

export async function GET(request: Request) {
  const requestUrl = new URL(request.url)
  const code = requestUrl.searchParams.get('code')

  console.log('üîç Auth Callback Route Handler - Processing...')
  console.log('Full URL:', requestUrl.href)
  console.log('Code parameter:', code ? 'Found' : 'Not found')

  if (code) {
    try {
      const supabase = createClient()
      
      console.log('üîÑ Exchanging code for session...')
      const { data, error } = await supabase.auth.exchangeCodeForSession(code)
      
      if (error) {
        console.error('‚ùå Error exchanging code for session:', error)
        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ—à–∏–±–∫–∏
        return NextResponse.redirect(new URL('/auth/error?message=' + encodeURIComponent(error.message), requestUrl.origin))
      }
      
      console.log('‚úÖ Code exchanged for session successfully')
      console.log('User:', data.user?.email)
      
      // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è
      return NextResponse.redirect(new URL('/auth/reset-password', requestUrl.origin))
      
    } catch (err) {
      console.error('‚ùå Exception in callback route:', err)
      return NextResponse.redirect(new URL('/auth/error?message=' + encodeURIComponent('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Å—ã–ª–∫–∏'), requestUrl.origin))
    }
  }

  console.error('‚ùå No code parameter found in callback URL')
  return NextResponse.redirect(new URL('/auth/error?message=' + encodeURIComponent('–ö–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Å—Å—ã–ª–∫–µ'), requestUrl.origin))
}
