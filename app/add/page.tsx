"use client"

import type React from "react"

import { useState, useEffect } from "react"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Textarea } from "@/components/ui/textarea"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group"
import { Upload, MapPin, Heart } from "lucide-react"
import { useRouter, useSearchParams } from "next/navigation"
import { useSupabaseSession } from "@/hooks/use-supabase-session"
import { safeSupabase as supabase } from "@/lib/supabase"
import { v5 as uuidv5 } from 'uuid'
import { uploadLocalImageToSupabase, isValidProductionUrl, getProductionPlaceholder, validateImage, validateImageDimensions, autoCompressImage } from '@/lib/image-upload'

export default function AddPetPage() {
  const router = useRouter()
  const { user, loading: authLoading, isAuthenticated } = useSupabaseSession()
  const [loading, setLoading] = useState(false)
  const [formData, setFormData] = useState({
    type: "lost",
    animal_type: "",
    breed: "",
    name: "",
    description: "",
    color: "",
    location: "",
    latitude: 45.02063,
    longitude: 37.50175,
    contact_phone: "",
    contact_name: "",
    reward: "",
    photo_url: "",
  })
  const [selectedFile, setSelectedFile] = useState<File | null>(null)
  const [previewUrl, setPreviewUrl] = useState<string>("")

  const searchParams = useSearchParams()
  const editId = searchParams.get("id")
  const fromAdmin = searchParams.get("from") === "admin"

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ UUID –∏–∑ NextAuth.js ID
  const generateUserId = (nextAuthId: string | undefined): string | null => {
    if (!nextAuthId) return null
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º namespace UUID –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–µ—Ç–µ—Ä–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ UUID
    const namespace = '6ba7b810-9dad-11d1-80b4-00c04fd430c8'
    return uuidv5(nextAuthId, namespace)
  }

  // –ó–∞–≥—Ä—É–∑–∫–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  useEffect(() => {
    const fetchPetForEdit = async () => {
      if (editId && supabase) {
        const { data, error } = await supabase.from("pets").select("*").eq("id", editId).single()
        if (data) {
          setFormData({
            type: data.type || "lost",
            animal_type: data.animal_type || "",
            breed: data.breed || "",
            name: data.name || "",
            description: data.description || "",
            color: data.color || "",
            location: data.location || "",
            latitude: data.latitude || 45.02063,
            longitude: data.longitude || 37.50175,
            contact_phone: data.contact_phone || "",
            contact_name: data.contact_name || "",
            reward: data.reward?.toString() || "",
            photo_url: data.photo_url || "",
          })
          if (data.photo_url) {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ URL –≤–∞–ª–∏–¥–Ω—ã–º (–Ω–µ –ª–æ–∫–∞–ª—å–Ω—ã–º blob URL)
            if (data.photo_url.startsWith('http') || data.photo_url.startsWith('data:')) {
              setPreviewUrl(data.photo_url)
              console.log('–ó–∞–≥—Ä—É–∂–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', data.photo_url)
            } else {
              // –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã–π URL, –æ—á–∏—â–∞–µ–º –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä
              setPreviewUrl("")
            }
          } else {
            setPreviewUrl("")
          }
        }
      }
    }
    fetchPetForEdit()
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [editId])

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    setLoading(true)

    try {
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
      let finalPhotoUrl = formData.photo_url
      
      // –ï—Å–ª–∏ –µ—Å—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–∞–π–ª, –Ω–æ –Ω–µ—Ç URL, –∑–Ω–∞—á–∏—Ç —Ñ–∞–π–ª –±—ã–ª –∑–∞–≥—Ä—É–∂–µ–Ω —á–µ—Ä–µ–∑ handleFileSelect
      // –∏ URL —É–∂–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ formData.photo_url
      if (selectedFile && !finalPhotoUrl) {
        console.log('‚ö†Ô∏è –ï—Å—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–∞–π–ª, –Ω–æ –Ω–µ—Ç URL. –§–∞–π–ª –º–æ–≥ –Ω–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å—Å—è.')
        // –ü–æ–ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª –∑–∞–Ω–æ–≤–æ
        try {
          const formDataUpload = new FormData()
          formDataUpload.append('file', selectedFile)
          
          const uploadResponse = await fetch('/api/upload', {
            method: 'POST',
            body: formDataUpload,
          })
          
          if (uploadResponse.ok) {
            const result = await uploadResponse.json()
            finalPhotoUrl = result.url
            console.log('‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω –ø–æ–≤—Ç–æ—Ä–Ω–æ:', finalPhotoUrl)
          }
        } catch (error) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞:', error)
        }
      }
      
      if (finalPhotoUrl) {
        console.log('üñºÔ∏è –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', finalPhotoUrl)
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–¥—Ö–æ–¥–∏—Ç –ª–∏ URL –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
        if (!isValidProductionUrl(finalPhotoUrl)) {
          console.log('üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ Supabase Storage...')
          
          // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤ Supabase Storage
          const uploadedUrl = await uploadLocalImageToSupabase(finalPhotoUrl)
          
          if (uploadedUrl) {
            finalPhotoUrl = uploadedUrl
            console.log('‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –≤ Supabase Storage:', finalPhotoUrl)
          } else {
            // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å, –∏—Å–ø–æ–ª—å–∑—É–µ–º placeholder
            finalPhotoUrl = getProductionPlaceholder()
            console.log('‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:', finalPhotoUrl)
          }
        } else {
          console.log('‚úÖ URL –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞:', finalPhotoUrl)
        }
      }
      
      console.log('üñºÔ∏è –§–∏–Ω–∞–ª—å–Ω—ã–π URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', {
        originalUrl: formData.photo_url,
        finalPhotoUrl: finalPhotoUrl,
        selectedFile: selectedFile?.name
      })

      console.log('üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:', {
        userId: user?.id,
        userEmail: user?.email,
        isAuthenticated: !!user
      })

      const petData = {
        ...formData,
        reward: formData.reward ? Number.parseInt(formData.reward) : null,
        status: "active",
        created_at: new Date().toISOString(),
        user_id: user?.id, // –ò—Å–ø–æ–ª—å–∑—É–µ–º Supabase user ID
        photo_url: finalPhotoUrl, // –°–æ—Ö—Ä–∞–Ω—è–µ–º photo_url
      }

      console.log('üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è:', {
        name: petData.name,
        location: petData.location,
        latitude: petData.latitude,
        longitude: petData.longitude,
        editId: editId
      })

      // –ò—Å–ø–æ–ª—å–∑—É–µ–º API route –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
      try {
        const response = await fetch('/api/pets', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            petData,
            userId: user?.id,
            userEmail: user?.email,
            editId: editId || null
          }),
        })

        const result = await response.json()

        if (!response.ok) {
          throw new Error(result.error || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è')
        }

        if (editId) {
          alert("–û–±—ä—è–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!")
        } else if (user) {
          alert("–û–±—ä—è–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –∏ –ø—Ä–∏–≤—è–∑–∞–Ω–æ –∫ –≤–∞—à–µ–º—É –∞–∫–∫–∞—É–Ω—Ç—É!")
        } else {
          alert("–û–±—ä—è–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ –∞–Ω–æ–Ω–∏–º–Ω–æ!")
        }
      } catch (apiError: any) {
        console.error("API error:", apiError)
        alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è: ${apiError.message}`)
      }

      // –†–µ–¥–∏—Ä–µ–∫—Ç–∏–º –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –æ—Ç–∫—É–¥–∞ –ø—Ä–∏—à–µ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      if (fromAdmin) {
        router.push("/admin?tab=tables")
      } else if (user) {
        router.push("/cabinet")
      } else {
        router.push("/")
      }
    } catch (error: any) {
      console.error("Error adding pet:", error)
      alert(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: ${error.message}`)
      // –†–µ–¥–∏—Ä–µ–∫—Ç–∏–º –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –æ—Ç–∫—É–¥–∞ –ø—Ä–∏—à–µ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      if (fromAdmin) {
        router.push("/admin?tab=tables")
      } else if (user) {
        router.push("/cabinet")
      } else {
        router.push("/")
      }
    } finally {
      setLoading(false)
    }
  }

  const handleInputChange = (field: string, value: string) => {
    setFormData((prev) => ({ ...prev, [field]: value }))
    
    // –£–±–∏—Ä–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ –∞–¥—Ä–µ—Å–∞ - —Ç–æ–ª—å–∫–æ —Ä—É—á–Ω–æ–π –ø–æ–∏—Å–∫ –ø–æ –∫–Ω–æ–ø–∫–µ
    // –≠—Ç–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∞–º –∑–∞–ø—Ä–æ—Å–æ–≤ –ø—Ä–∏ –≤–≤–æ–¥–µ —Ç–µ–∫—Å—Ç–∞
  }

  const handleFileSelect = async (event: React.ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0]
    if (!file) return

    try {
      // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–∏–ø —Ñ–∞–π–ª–∞ (–±–µ–∑ —Ä–∞–∑–º–µ—Ä–∞)
      if (!['image/jpeg', 'image/jpg', 'image/png', 'image/webp', 'image/gif'].includes(file.type)) {
        alert(`‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞. –†–∞–∑—Ä–µ—à–µ–Ω—ã: JPEG, PNG, WebP, GIF`)
        return
      }

      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∂–∏–º–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ü–ï–†–ï–î –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π —Ä–∞–∑–º–µ—Ä–∞
      console.log('üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...')
      const finalFile = await autoCompressImage(file)
      if (finalFile.size !== file.size) {
        console.log(`‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–∂–∞—Ç–æ: ${(file.size / 1024 / 1024).toFixed(1)}MB ‚Üí ${(finalFile.size / 1024 / 1024).toFixed(1)}MB`)
      } else {
        console.log('‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç —Å–∂–∞—Ç–∏—è')
      }

      // –¢–µ–ø–µ—Ä—å –≤–∞–ª–∏–¥–∏—Ä—É–µ–º —Å–∂–∞—Ç—ã–π —Ñ–∞–π–ª
      const validation = validateImage(finalFile)
      if (!validation.valid) {
        alert(`‚ùå ${validation.error}`)
        return
      }

      // –í–∞–ª–∏–¥–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
      const dimensionValidation = await validateImageDimensions(finalFile)
      if (!dimensionValidation.valid) {
        alert(`‚ùå ${dimensionValidation.error}`)
        return
      }

      setSelectedFile(finalFile)
      
      // –°–æ–∑–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä
      const url = URL.createObjectURL(finalFile)
      setPreviewUrl(url)
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –≤ Supabase Storage
      const formData = new FormData()
      formData.append('file', finalFile)
      
      const response = await fetch('/api/upload', {
        method: 'POST',
        body: formData,
      })
      
      const result = await response.json()
      
      if (response.ok) {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º URL –∏–∑ Supabase Storage
        setFormData((prev) => ({ ...prev, photo_url: result.url }))
        console.log('‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –≤ Supabase:', result.url)
      } else {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞:', result.error)
        console.log('üì§ –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', result)
        alert('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.')
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞:', error)
      alert('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.')
    }
  }

  const handleDrop = async (event: React.DragEvent<HTMLDivElement>) => {
    event.preventDefault()
    const file = event.dataTransfer.files[0]
    if (!file || !file.type.startsWith('image/')) return

    try {
      // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–∏–ø —Ñ–∞–π–ª–∞ (–±–µ–∑ —Ä–∞–∑–º–µ—Ä–∞)
      if (!['image/jpeg', 'image/jpg', 'image/png', 'image/webp', 'image/gif'].includes(file.type)) {
        alert(`‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞. –†–∞–∑—Ä–µ—à–µ–Ω—ã: JPEG, PNG, WebP, GIF`)
        return
      }

      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∂–∏–º–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ü–ï–†–ï–î –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π —Ä–∞–∑–º–µ—Ä–∞
      console.log('üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...')
      const finalFile = await autoCompressImage(file)
      if (finalFile.size !== file.size) {
        console.log(`‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–∂–∞—Ç–æ: ${(file.size / 1024 / 1024).toFixed(1)}MB ‚Üí ${(finalFile.size / 1024 / 1024).toFixed(1)}MB`)
      } else {
        console.log('‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç —Å–∂–∞—Ç–∏—è')
      }

      // –¢–µ–ø–µ—Ä—å –≤–∞–ª–∏–¥–∏—Ä—É–µ–º —Å–∂–∞—Ç—ã–π —Ñ–∞–π–ª
      const validation = validateImage(finalFile)
      if (!validation.valid) {
        alert(`‚ùå ${validation.error}`)
        return
      }

      // –í–∞–ª–∏–¥–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
      const dimensionValidation = await validateImageDimensions(finalFile)
      if (!dimensionValidation.valid) {
        alert(`‚ùå ${dimensionValidation.error}`)
        return
      }

      setSelectedFile(finalFile)
      
      // –°–æ–∑–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä
      const url = URL.createObjectURL(finalFile)
      setPreviewUrl(url)
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –≤ Supabase Storage
      const formData = new FormData()
      formData.append('file', finalFile)
      
      const response = await fetch('/api/upload', {
        method: 'POST',
        body: formData,
      })
      
      const result = await response.json()
      
      if (response.ok) {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º URL –∏–∑ Supabase Storage
        setFormData((prev) => ({ ...prev, photo_url: result.url }))
        console.log('‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –≤ Supabase:', result.url)
      } else {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞:', result.error)
        console.log('üì§ –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', result)
        alert('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.')
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞:', error)
      alert('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.')
    }
  }

  const handleDragOver = (event: React.DragEvent<HTMLDivElement>) => {
    event.preventDefault()
  }

  const handleCancel = () => {
    // –†–µ–¥–∏—Ä–µ–∫—Ç–∏–º –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –æ—Ç–∫—É–¥–∞ –ø—Ä–∏—à–µ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    if (fromAdmin) {
      router.push("/admin?tab=tables")
    } else if (user) {
      router.push("/cabinet")
    } else {
      router.push("/")
    }
  }

  const openFileDialog = () => {
    const fileInput = document.getElementById('file-input') as HTMLInputElement
    fileInput?.click()
  }

  const clearPreview = async () => {
    // –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–µ–∫—É—â–µ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ Supabase, —É–¥–∞–ª—è–µ–º –µ–≥–æ
    const currentUrl = formData.photo_url
    if (currentUrl && currentUrl.includes('supabase')) {
      try {
        // –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –∏–∑ URL
        const fileName = currentUrl.split('/').pop()
        if (fileName) {
          await fetch('/api/upload/delete', {
            method: 'DELETE',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ fileName }),
          })
          console.log('–°—Ç–∞—Ä—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω –∏–∑ Supabase Storage')
        }
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞:', error)
      }
    }
    
    setPreviewUrl("")
    setSelectedFile(null)
    setFormData(prev => ({ ...prev, photo_url: "" }))
  }


  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è –∞–¥—Ä–µ—Å–∞ –≤ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
  const geocodeAddress = async (address: string) => {
    console.log('üöÄ geocodeAddress –≤—ã–∑–≤–∞–Ω–∞ —Å –∞–¥—Ä–µ—Å–æ–º:', address)
    
    if (!address.trim()) {
      console.log('‚ö†Ô∏è –ü—É—Å—Ç–æ–π –∞–¥—Ä–µ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞')
      alert('–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞')
      return
    }

    console.log('üîç –ù–∞—á–∏–Ω–∞–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥—Ä–µ—Å–∞:', address)

    try {
      const normalizedAddress = address.trim().replace(/\s+/g, ' ')
      let found = false
      
      // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –ø–æ–∏—Å–∫–∞ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –ø–æ–∫—Ä—ã—Ç–∏—è
      const searchVariants = [
        // –¢–æ—á–Ω—ã–π –∞–¥—Ä–µ—Å
        normalizedAddress,
        // –° –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º —Ä–µ–≥–∏–æ–Ω–∞
        `${normalizedAddress}, –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å–∫–∏–π –∫—Ä–∞–π, –†–æ—Å—Å–∏—è`,
        `${normalizedAddress}, –†–æ—Å—Å–∏—è`,
        // –ï—Å–ª–∏ —ç—Ç–æ –Ω–∞—Å–µ–ª–µ–Ω–Ω—ã–π –ø—É–Ω–∫—Ç, –¥–æ–±–∞–≤–ª—è–µ–º "—Å—Ç–∞–Ω–∏—Ü–∞", "—Å–µ–ª–æ", "—Ö—É—Ç–æ—Ä"
        ...(isSettlementName(normalizedAddress) ? [
          `—Å—Ç–∞–Ω–∏—Ü–∞ ${normalizedAddress}, –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å–∫–∏–π –∫—Ä–∞–π, –†–æ—Å—Å–∏—è`,
          `—Å–µ–ª–æ ${normalizedAddress}, –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å–∫–∏–π –∫—Ä–∞–π, –†–æ—Å—Å–∏—è`,
          `—Ö—É—Ç–æ—Ä ${normalizedAddress}, –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å–∫–∏–π –∫—Ä–∞–π, –†–æ—Å—Å–∏—è`,
          `–ø–æ—Å–µ–ª–æ–∫ ${normalizedAddress}, –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å–∫–∏–π –∫—Ä–∞–π, –†–æ—Å—Å–∏—è`
        ] : []),
        // –î–ª—è —É–ª–∏—Ü –¥–æ–±–∞–≤–ª—è–µ–º –≥–æ—Ä–æ–¥
        ...(normalizedAddress.includes('—É–ª–∏—Ü–∞') || normalizedAddress.includes('—É–ª.') || /^\d+/.test(normalizedAddress) ? [
          `${normalizedAddress}, –ê–Ω–∞–ø–∞, –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å–∫–∏–π –∫—Ä–∞–π, –†–æ—Å—Å–∏—è`,
          `${normalizedAddress}, –ù–æ–≤–æ—Ä–æ—Å—Å–∏–π—Å–∫, –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å–∫–∏–π –∫—Ä–∞–π, –†–æ—Å—Å–∏—è`
        ] : [])
      ]

      console.log('üîç –í–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ–∏—Å–∫–∞:', searchVariants)

      // –ü—Ä–æ–±—É–µ–º –∫–∞–∂–¥—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –ø–æ–∏—Å–∫–∞
      for (const searchQuery of searchVariants) {
        if (found) break
        
        console.log('üîç –ü—Ä–æ–±—É–µ–º –ø–æ–∏—Å–∫:', searchQuery)
        
        try {
          const url = `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(searchQuery)}&limit=1&addressdetails=1&countrycodes=ru`
          const response = await fetch(url)
          
          if (!response.ok) {
            console.warn(`‚ö†Ô∏è HTTP error –¥–ª—è "${searchQuery}": ${response.status}`)
            continue
          }
          
          const data = await response.json()
          console.log('üì° –û—Ç–≤–µ—Ç –æ—Ç Nominatim –¥–ª—è:', searchQuery, data)
          
          if (data && data.length > 0) {
            const result = data[0]
            setFormData((prev) => ({
              ...prev,
              latitude: parseFloat(result.lat),
              longitude: parseFloat(result.lon),
            }))
            console.log('‚úÖ –ê–¥—Ä–µ—Å –Ω–∞–π–¥–µ–Ω —á–µ—Ä–µ–∑ Nominatim:', {
              originalAddress: address,
              searchQuery: searchQuery,
              lat: result.lat,
              lon: result.lon,
              displayName: result.display_name
            })
            alert(`‚úÖ –ê–¥—Ä–µ—Å –Ω–∞–π–¥–µ–Ω!\n${result.display_name}\n–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ${result.lat}, ${result.lon}`)
            found = true
            break
          }
        } catch (searchError) {
          console.warn(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –¥–ª—è "${searchQuery}":`, searchError)
          continue
        }
      }

      // –ï—Å–ª–∏ –Ω–∏ –æ–¥–∏–Ω –≤–∞—Ä–∏–∞–Ω—Ç –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –∏—Å–ø–æ–ª—å–∑—É–µ–º —É–º–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
      if (!found) {
        console.warn('‚ö†Ô∏è –ê–¥—Ä–µ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω —á–µ—Ä–µ–∑ Nominatim, –∏—Å–ø–æ–ª—å–∑—É–µ–º —É–º–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ')
        
        const lowerAddress = normalizedAddress.toLowerCase()
        let coordinates = null
        let locationName = ''

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
        if (lowerAddress.includes('–≥–æ—Å—Ç–∞–≥–∞–µ–≤—Å–∫–∞—è')) {
          coordinates = { lat: 45.02063, lng: 37.50175 }
          locationName = '–ì–æ—Å—Ç–∞–≥–∞–µ–≤—Å–∫–∞—è'
        } else if (lowerAddress.includes('–≤–∞—Ä–µ–Ω–∏–∫–æ–≤—Å–∫–∞—è')) {
          coordinates = { lat: 45.12085, lng: 37.64171 }
          locationName = '–í–∞—Ä–µ–Ω–∏–∫–æ–≤—Å–∫–∞—è'
        } else if (lowerAddress.includes('–Ω–∞—Ç—É—Ö–∞–µ–≤—Å–∫–∞—è')) {
          coordinates = { lat: 45.0, lng: 37.6 }
          locationName = '–ù–∞—Ç—É—Ö–∞–µ–≤—Å–∫–∞—è'
        } else if (lowerAddress.includes('–Ω–æ–≤–æ—Ä–æ—Å—Å–∏–π—Å–∫')) {
          coordinates = { lat: 44.7239, lng: 37.7708 }
          locationName = '–ù–æ–≤–æ—Ä–æ—Å—Å–∏–π—Å–∫'
        } else if (lowerAddress.includes('–∞–Ω–∞–ø–∞')) {
          coordinates = { lat: 44.8951, lng: 37.3142 }
          locationName = '–ê–Ω–∞–ø–∞'
        } else if (lowerAddress.includes('–∫—Ä–∞—Å–Ω–æ–¥–∞—Ä')) {
          coordinates = { lat: 45.0448, lng: 38.976 }
          locationName = '–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä'
        } else if (lowerAddress.includes('—Å–æ—á–∏')) {
          coordinates = { lat: 43.5855, lng: 39.7231 }
          locationName = '–°–æ—á–∏'
        } else if (lowerAddress.includes('–≥–µ–ª–µ–Ω–¥–∂–∏–∫')) {
          coordinates = { lat: 44.5622, lng: 38.0768 }
          locationName = '–ì–µ–ª–µ–Ω–¥–∂–∏–∫'
        }

        if (coordinates) {
          setFormData((prev) => ({
            ...prev,
            latitude: coordinates.lat,
            longitude: coordinates.lng,
          }))
          console.log(`‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è ${locationName}:`, coordinates)
          alert(`‚úÖ –ê–¥—Ä–µ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ, –Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è ${locationName}!\n–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ${coordinates.lat}, ${coordinates.lng}`)
        } else {
          console.log('‚ùå –ê–¥—Ä–µ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω –∏ –Ω–µ—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é')
          alert('‚ùå –ê–¥—Ä–µ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–π –∞–¥—Ä–µ—Å –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ –∏–∑–≤–µ—Å—Ç–Ω—ã–π –≥–æ—Ä–æ–¥/—Å—Ç–∞–Ω–∏—Ü—É.')
        }
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è:', error)
      alert('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∞–¥—Ä–µ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.')
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∞–¥—Ä–µ—Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞
  const isSettlementName = (address: string): boolean => {
    const addressLower = address.toLowerCase().trim()
    
    // –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–∞ –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞
    const settlementTypes = [
      '—Å—Ç–∞–Ω–∏—Ü–∞', '—Å–µ–ª–æ', '—Ö—É—Ç–æ—Ä', '–ø–æ—Å–µ–ª–æ–∫', '–¥–µ—Ä–µ–≤–Ω—è', '–∞—É–ª'
    ]
    
    // –ù–∞–∑–≤–∞–Ω–∏—è –Ω–∞—Å–µ–ª–µ–Ω–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤ (–Ω–µ—á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –∫ —Ä–µ–≥–∏—Å—Ç—Ä—É)
    const settlementNames = [
      '–≥–æ—Å—Ç–∞–≥–∞–µ–≤—Å–∫–∞—è', '–∫–∞—Å—Ç–∞–Ω–∞–µ–≤—Å–∫–∞—è', '–≤–∏—Ç—è–∑–µ–≤–æ', '–∞–Ω–∞–ø–∞'
    ]
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ –∞–¥—Ä–µ—Å —Ç–∏–ø –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞
    const hasSettlementType = settlementTypes.some(type => 
      addressLower.includes(type)
    )
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ –∞–¥—Ä–µ—Å –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞
    const hasSettlementName = settlementNames.some(name => 
      addressLower.includes(name)
    )
    
    return hasSettlementType || hasSettlementName
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–∞–∑–≤–∞–Ω–∏–π –Ω–∞—Å–µ–ª–µ–Ω–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤
  const normalizeSettlementName = (address: string): string => {
    const addressLower = address.toLowerCase().trim()
    
    // –ú–∞–ø–ø–∏–Ω–≥ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∞–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è
    const settlementMapping: { [key: string]: string } = {
      '–≥–æ—Å—Ç–∞–≥–∞–µ–≤—Å–∫–∞—è': '–ì–æ—Å—Ç–∞–≥–∞–µ–≤—Å–∫–∞—è',
      '–∫–∞—Å—Ç–∞–Ω–∞–µ–≤—Å–∫–∞—è': '–ö–∞—Å—Ç–∞–Ω–∞–µ–≤—Å–∫–∞—è', 
      '–≤–∏—Ç—è–∑–µ–≤–æ': '–í–∏—Ç—è–∑–µ–≤–æ',
      '–∞–Ω–∞–ø–∞': '–ê–Ω–∞–ø–∞'
    }
    
    // –ò—â–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –≤ –º–∞–ø–ø–∏–Ω–≥–µ
    for (const [key, value] of Object.entries(settlementMapping)) {
      if (addressLower.includes(key)) {
        return value
      }
    }
    
    // –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –º–∞–ø–ø–∏–Ω–≥–µ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –∞–¥—Ä–µ—Å —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã
    return address.trim().charAt(0).toUpperCase() + address.trim().slice(1).toLowerCase()
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ü–µ–Ω—Ç—Ä–∞ –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞
  const geocodeSettlement = async (settlementName: string): Promise<boolean> => {
    try {
      const response = await fetch(
        `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(settlementName + ', –ê–Ω–∞–ø—Å–∫–∏–π —Ä–∞–π–æ–Ω, –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä—Å–∫–∏–π –∫—Ä–∞–π, –†–æ—Å—Å–∏—è')}&limit=1&addressdetails=1&featuretype=settlement`
      )
      
      const data = await response.json()
      
      if (data && data.length > 0) {
        const result = data[0]
        setFormData((prev) => ({
          ...prev,
          latitude: parseFloat(result.lat),
          longitude: parseFloat(result.lon),
        }))
        console.log('üèòÔ∏è –¶–µ–Ω—Ç—Ä –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –Ω–∞–π–¥–µ–Ω:', {
          settlement: settlementName,
          lat: result.lat,
          lon: result.lon,
          displayName: result.display_name
        })
        alert(`‚úÖ –ù–∞—Å–µ–ª–µ–Ω–Ω—ã–π –ø—É–Ω–∫—Ç –Ω–∞–π–¥–µ–Ω!\n${result.display_name}\n–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ${result.lat}, ${result.lon}`)
        return true
      }
      return false
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ —Ü–µ–Ω—Ç—Ä–∞ –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞:', error)
      return false
    }
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-orange-50">
      {/* Header */}
      <header className="bg-white shadow-sm border-b">
        <div className="container mx-auto px-4 py-4">
          <div className="flex items-center space-x-2">
            <Heart className="h-6 w-6 text-orange-500" />
            <h1 className="text-xl font-bold text-gray-900">–ü–æ–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</h1>
          </div>
        </div>
      </header>

      <div className="container mx-auto px-4 py-6 max-w-2xl">
        <Card>
          <CardHeader>
            <CardTitle>{editId ? "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ" : "–ù–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ"}</CardTitle>
            <p className="text-sm text-gray-600">
              –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∏—Ç–æ–º—Ü–µ, —á—Ç–æ–±—ã –¥—Ä—É–≥–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥–ª–∏ –ø–æ–º–æ—á—å
            </p>
            <div className="mt-2 text-xs text-gray-500">
              {user?.email ? (
                <>–í—ã –¥–æ–±–∞–≤–ª—è–µ—Ç–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –∫–∞–∫: <span className="font-semibold">{user.email}</span></>
              ) : (
                <>–í—ã –¥–æ–±–∞–≤–ª—è–µ—Ç–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ <span className="font-semibold">–∞–Ω–æ–Ω–∏–º–Ω–æ</span></>
              )}
            </div>
          </CardHeader>
          <CardContent>
            <form onSubmit={handleSubmit} className="space-y-6">
              {/* –¢–∏–ø –æ–±—ä—è–≤–ª–µ–Ω–∏—è */}
              <div className="space-y-3">
                <Label className="text-base font-medium">–¢–∏–ø –æ–±—ä—è–≤–ª–µ–Ω–∏—è</Label>
                <RadioGroup
                  value={formData.type}
                  onValueChange={(value) => handleInputChange("type", value)}
                  className="flex gap-6"
                >
                  <div className="flex items-center space-x-2">
                    <RadioGroupItem value="lost" id="lost" />
                    <Label htmlFor="lost" className="cursor-pointer">
                      –ü–æ—Ç–µ—Ä—è–ª—Å—è –ø–∏—Ç–æ–º–µ—Ü
                    </Label>
                  </div>
                  <div className="flex items-center space-x-2">
                    <RadioGroupItem value="found" id="found" />
                    <Label htmlFor="found" className="cursor-pointer">
                      –ù–∞–π–¥–µ–Ω –ø–∏—Ç–æ–º–µ—Ü
                    </Label>
                  </div>
                </RadioGroup>
              </div>

              {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div className="space-y-2">
                  <Label htmlFor="animal_type">–í–∏–¥ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ *</Label>
                  <Select
                    value={formData.animal_type}
                    onValueChange={(value) => handleInputChange("animal_type", value)}
                  >
                    <SelectTrigger>
                      <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥" />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="dog">–°–æ–±–∞–∫–∞</SelectItem>
                      <SelectItem value="cat">–ö–æ—à–∫–∞</SelectItem>
                      <SelectItem value="bird">–ü—Ç–∏—Ü–∞</SelectItem>
                      <SelectItem value="rabbit">–ö—Ä–æ–ª–∏–∫</SelectItem>
                      <SelectItem value="other">–î—Ä—É–≥–æ–µ</SelectItem>
                    </SelectContent>
                  </Select>
                </div>

                <div className="space-y-2">
                  <Label htmlFor="breed">–ü–æ—Ä–æ–¥–∞ *</Label>
                  <Input
                    id="breed"
                    value={formData.breed}
                    onChange={(e) => handleInputChange("breed", e.target.value)}
                    placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –õ–∞–±—Ä–∞–¥–æ—Ä, –ü–µ—Ä—Å–∏–¥—Å–∫–∞—è"
                    required
                  />
                </div>
              </div>

              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div className="space-y-2">
                  <Label htmlFor="name">–ö–ª–∏—á–∫–∞</Label>
                  <Input
                    id="name"
                    value={formData.name}
                    onChange={(e) => handleInputChange("name", e.target.value)}
                    placeholder={formData.type === "found" ? "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ" : "–ö–ª–∏—á–∫–∞ –ø–∏—Ç–æ–º—Ü–∞"}
                  />
                </div>

                <div className="space-y-2">
                  <Label htmlFor="color">–û–∫—Ä–∞—Å *</Label>
                  <Input
                    id="color"
                    value={formData.color}
                    onChange={(e) => handleInputChange("color", e.target.value)}
                    placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –†—ã–∂–∏–π, –ß–µ—Ä–Ω–æ-–±–µ–ª—ã–π"
                    required
                  />
                </div>
              </div>

              {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
              <div className="space-y-2">
                <Label htmlFor="description">–û–ø–∏—Å–∞–Ω–∏–µ *</Label>
                <Textarea
                  id="description"
                  value={formData.description}
                  onChange={(e) => handleInputChange("description", e.target.value)}
                  placeholder="–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–∏—Ç–æ–º—Ü–∞, –æ—Å–æ–±—ã–µ –ø—Ä–∏–º–µ—Ç—ã, –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞ –ø–æ—Ç–µ—Ä–∏/–Ω–∞—Ö–æ–¥–∫–∏..."
                  rows={4}
                  required
                />
              </div>

              {/* –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ */}
              <div className="space-y-2">
                <Label htmlFor="location">–ú–µ—Å—Ç–æ –ø–æ—Ç–µ—Ä–∏/–Ω–∞—Ö–æ–¥–∫–∏ *</Label>
                <div className="flex gap-2">
                  <Input
                    id="location"
                    value={formData.location}
                    onChange={(e) => handleInputChange("location", e.target.value)}
                    placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –ø–ª—è–∂, —É–ª. –õ–µ–Ω–∏–Ω–∞"
                    required
                    className="flex-1"
                  />
                  <Button 
                    type="button" 
                    variant="outline" 
                    onClick={(e) => {
                      e.preventDefault()
                      e.stopPropagation()
                      if (formData.location.trim()) {
                        geocodeAddress(formData.location)
                      } else {
                        alert('–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞')
                      }
                    }}
                    title="–ù–∞–π—Ç–∏ –∞–¥—Ä–µ—Å –Ω–∞ –∫–∞—Ä—Ç–µ"
                    className="min-w-[40px]"
                  >
                    üîç
                  </Button>
                </div>
                <p className="text-xs text-gray-500">
                  üîç –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ø–æ–∏—Å–∫–∞, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –∞–¥—Ä–µ—Å –Ω–∞ –∫–∞—Ä—Ç–µ
                </p>
                <p className="text-xs text-blue-600">
                  üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: {formData.latitude.toFixed(6)}, {formData.longitude.toFixed(6)}
                </p>
              </div>

              {/* –ö–æ–Ω—Ç–∞–∫—Ç—ã */}
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div className="space-y-2">
                  <Label htmlFor="contact_name">–í–∞—à–µ –∏–º—è *</Label>
                  <Input
                    id="contact_name"
                    value={formData.contact_name}
                    onChange={(e) => handleInputChange("contact_name", e.target.value)}
                    placeholder="–ö–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è"
                    required
                  />
                </div>

                <div className="space-y-2">
                  <Label htmlFor="contact_phone">–¢–µ–ª–µ—Ñ–æ–Ω *</Label>
                  <Input
                    id="contact_phone"
                    type="tel"
                    value={formData.contact_phone}
                    onChange={(e) => handleInputChange("contact_phone", e.target.value)}
                    placeholder="+7 (918) 123-45-67"
                    required
                  />
                </div>
              </div>

              {/* –í–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ */}
              {formData.type === "lost" && (
                <div className="space-y-2">
                  <Label htmlFor="reward">–í–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)</Label>
                  <Input
                    id="reward"
                    type="number"
                    value={formData.reward}
                    onChange={(e) => handleInputChange("reward", e.target.value)}
                    placeholder="–°—É–º–º–∞ –≤ —Ä—É–±–ª—è—Ö"
                    min="0"
                  />
                </div>
              )}

              {/* –§–æ—Ç–æ */}
              <div className="space-y-2">
                <Label htmlFor="photo_url">–§–æ—Ç–æ –ø–∏—Ç–æ–º—Ü–∞</Label>
                <p className="text-xs text-gray-500">
                  –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: JPEG, PNG, WebP, GIF. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 5MB. 
                  –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ: 100x100 - 2048x2048px. –í—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∂–∏–º–∞—é—Ç—Å—è –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏.
                </p>
                
                {/* –°–∫—Ä—ã—Ç—ã–π input –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞ */}
                <input
                  id="file-input"
                  type="file"
                  accept="image/*"
                  onChange={handleFileSelect}
                  className="hidden"
                />
                
                <div 
                  className="border-2 border-dashed border-gray-300 rounded-lg p-6 text-center cursor-pointer hover:border-orange-400 hover:bg-orange-50 transition-colors"
                  onClick={openFileDialog}
                  onDrop={handleDrop}
                  onDragOver={handleDragOver}
                >
                  {previewUrl ? (
                    <div className="space-y-2">
                      <img 
                        src={previewUrl} 
                        alt="–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä" 
                        className="max-h-48 mx-auto rounded-lg object-cover"
                        onError={() => {
                          // –ï—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –æ—á–∏—â–∞–µ–º –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä
                          setPreviewUrl("")
                          setFormData(prev => ({ ...prev, photo_url: "" }))
                        }}
                      />
                      <div className="flex items-center justify-center gap-2">
                        <p className="text-sm text-green-600">–§–æ—Ç–æ –≤—ã–±—Ä–∞–Ω–æ! –ù–∞–∂–º–∏—Ç–µ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è</p>
                        <Button 
                          type="button" 
                          variant="outline" 
                          size="sm"
                          onClick={(e) => {
                            e.stopPropagation()
                            clearPreview()
                          }}
                          className="text-xs"
                        >
                          –£–¥–∞–ª–∏—Ç—å
                        </Button>
                      </div>
                    </div>
                  ) : (
                    <>
                      <Upload className="h-8 w-8 text-gray-400 mx-auto mb-2" />
                      <p className="text-sm text-gray-600 mb-2">–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–æ—Ç–æ —Å—é–¥–∞ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –¥–ª—è –≤—ã–±–æ—Ä–∞</p>
                    </>
                  )}
                </div>
                
                <div className="text-center">
                  <p className="text-xs text-gray-500 mb-2">–ò–ª–∏ –≤—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–æ—Ç–æ:</p>
                  <Input
                    id="photo_url"
                    type="url"
                    value={formData.photo_url}
                    onChange={(e) => {
                      handleInputChange("photo_url", e.target.value)
                      if (e.target.value) {
                        setPreviewUrl(e.target.value)
                        setSelectedFile(null)
                      } else {
                        setPreviewUrl("")
                      }
                    }}
                    placeholder="https://example.com/photo.jpg"
                    className="text-sm"
                  />
                </div>
              </div>

              {/* –ö–Ω–æ–ø–∫–∏ */}
              <div className="flex gap-4 pt-4">
                <Button 
                  type="button" 
                  variant="outline" 
                  className="flex-1 bg-transparent"
                  onClick={handleCancel}
                >
                  –û—Ç–º–µ–Ω–∞
                </Button>
                <Button type="submit" className="flex-1 bg-orange-500 hover:bg-orange-600" disabled={loading}>
                  {editId ? (loading ? "–°–æ—Ö—Ä–∞–Ω—è–µ–º..." : "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è") : (loading ? "–ü—É–±–ª–∏–∫—É–µ–º..." : "–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ")}
                </Button>
              </div>
            </form>
          </CardContent>
        </Card>
      </div>
    </div>
  )
}
