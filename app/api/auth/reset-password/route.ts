import { NextRequest, NextResponse } from 'next/server'
import { supabase } from '@/lib/supabase'

export async function POST(request: NextRequest) {
  try {
    const body = await request.json()
    const { newPassword } = body

    if (!newPassword) {
      return NextResponse.json({ 
        error: '–ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω' 
      }, { status: 400 })
    }

    if (newPassword.length < 6) {
      return NextResponse.json({ 
        error: '–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤' 
      }, { status: 400 })
    }

    if (!supabase) {
      return NextResponse.json({ error: 'Supabase not initialized' }, { status: 500 })
    }

    // –°–¢–ê–ù–î–ê–†–¢–ù–´–ô –ü–û–î–•–û–î SUPABASE: –ü—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å
    // Supabase –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç —Å–µ—Å—Å–∏—é

    // –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å
    console.log('üîÑ Updating password...')
    const { error: updateError } = await supabase.auth.updateUser({
      password: newPassword
    })

    if (updateError) {
      console.error('Error updating password:', updateError)
      
      if (updateError.message.includes('Password should be at least')) {
        return NextResponse.json({ 
          error: '–ü–∞—Ä–æ–ª—å —Å–ª–∏—à–∫–æ–º —Å–ª–∞–±—ã–π. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–π –ø–∞—Ä–æ–ª—å' 
        }, { status: 400 })
      }
      
      return NextResponse.json({ 
        error: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–∞—Ä–æ–ª—è',
        details: updateError.message 
      }, { status: 500 })
    }

    console.log('‚úÖ Password updated successfully')
    return NextResponse.json({
      message: '–ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω',
      success: true
    })

  } catch (error: any) {
    console.error('Error in reset password API:', error)
    return NextResponse.json({ 
      error: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –ø–∞—Ä–æ–ª—è',
      details: error.message 
    }, { status: 500 })
  }
}

