import { NextResponse } from 'next/server'
import { createClient } from '@supabase/supabase-js'

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!
const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY!

const supabase = createClient(supabaseUrl, supabaseKey)

export async function GET() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...')
    
    // –ü–æ–ª—É—á–∞–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏–µ —Å –ì–æ—Å—Ç–∞–≥–∞–µ–≤—Å–∫–æ–π (–Ω–µ—á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∫ —Ä–µ–≥–∏—Å—Ç—Ä—É)
    const { data: pets, error } = await supabase
      .from('pets')
      .select('*')
      .ilike('location', '%–≥–æ—Å—Ç–∞–≥–∞–µ–≤—Å–∫–∞—è%')
    
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error)
      return NextResponse.json({ error: error.message }, { status: 500 })
    }
    
    if (!pets || pets.length === 0) {
      return NextResponse.json({ error: '–û–±—ä—è–≤–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ' }, { status: 404 })
    }
    
    const pet = pets[0]
    console.log('üìä –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', {
      name: pet.name,
      location: pet.location,
      latitude: pet.latitude,
      longitude: pet.longitude
    })
    
    return NextResponse.json({
      name: pet.name,
      location: pet.location,
      latitude: pet.latitude,
      longitude: pet.longitude,
      message: '–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö'
    })
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error)
    return NextResponse.json({ error: 'Internal server error' }, { status: 500 })
  }
}
