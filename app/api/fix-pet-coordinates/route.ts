import { NextResponse } from 'next/server'
import { createClient } from '@supabase/supabase-js'

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!
const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY!

const supabase = createClient(supabaseUrl, supabaseKey)

export async function POST() {
  try {
    console.log('üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤ –ì–æ—Å—Ç–∞–≥–∞–µ–≤—Å–∫–æ–π...')
    
    // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è –ì–æ—Å—Ç–∞–≥–∞–µ–≤—Å–∫–æ–π
    const correctCoordinates = {
      latitude: 45.02063,
      longitude: 37.50175
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤ –ì–æ—Å—Ç–∞–≥–∞–µ–≤—Å–∫–æ–π (–Ω–µ—á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∫ —Ä–µ–≥–∏—Å—Ç—Ä—É)
    const { data, error } = await supabase
      .from('pets')
      .update({
        latitude: correctCoordinates.latitude,
        longitude: correctCoordinates.longitude
      })
      .ilike('location', '%–≥–æ—Å—Ç–∞–≥–∞–µ–≤—Å–∫–∞—è%')
      .select()
    
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç:', error)
      return NextResponse.json({ error: error.message }, { status: 500 })
    }
    
    console.log('‚úÖ –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', data)
    
    return NextResponse.json({
      message: '–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è –ì–æ—Å—Ç–∞–≥–∞–µ–≤—Å–∫–æ–π –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö',
      updatedData: data,
      newCoordinates: correctCoordinates
    })
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error)
    return NextResponse.json({ error: 'Internal server error' }, { status: 500 })
  }
}
