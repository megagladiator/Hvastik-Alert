import { NextRequest, NextResponse } from 'next/server'
import { supabaseServer } from '@/lib/supabase-server'

export async function POST(request: NextRequest) {
  try {
    const body = await request.json()
    const { petData, userEmail } = body

    if (!petData) {
      return NextResponse.json({ error: 'Pet data is required' }, { status: 400 })
    }

    // Email –∞–¥–º–∏–Ω–∞
    const adminEmail = 'agentgl007@gmail.com'

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∏—Å—å–º–∞
    const emailSubject = `üÜï –ù–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ: ${petData.type === 'lost' ? '–ü–æ—Ç–µ—Ä—è–ª—Å—è –ø–∏—Ç–æ–º–µ—Ü' : '–ù–∞—à–ª–∏ –ø–∏—Ç–æ–º—Ü–∞'} - ${petData.name}`
    
    const emailContent = `
–ù–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å–∞–π—Ç–µ –•–≤–æ—Å—Ç–∏–∫ Alert!

üìã –î–µ—Ç–∞–ª–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è:
‚Ä¢ –¢–∏–ø: ${petData.type === 'lost' ? '–ü–æ—Ç–µ—Ä—è–ª—Å—è –ø–∏—Ç–æ–º–µ—Ü' : '–ù–∞—à–ª–∏ –ø–∏—Ç–æ–º—Ü–∞'}
‚Ä¢ –ò–º—è –ø–∏—Ç–æ–º—Ü–∞: ${petData.name}
‚Ä¢ –ü–æ—Ä–æ–¥–∞: ${petData.breed}
‚Ä¢ –¶–≤–µ—Ç: ${petData.color}
‚Ä¢ –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ: ${petData.location}
‚Ä¢ –û–ø–∏—Å–∞–Ω–∏–µ: ${petData.description}
‚Ä¢ –ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ: ${petData.contact_name}
‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: ${petData.contact_phone}
${petData.reward ? `‚Ä¢ –í–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ: ${petData.reward} ‚ÇΩ` : ''}

üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${userEmail || '–ê–Ω–æ–Ω–∏–º–Ω–æ'}
üìÖ –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: ${new Date().toLocaleString('ru-RU')}

üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ: ${process.env.NEXTAUTH_URL || 'http://localhost:3000'}/pet/${petData.id}

---
–•–≤–æ—Å—Ç–∏–∫ Alert - –ü–æ–∏—Å–∫ –ø–∏—Ç–æ–º—Ü–µ–≤ –≤ –ê–Ω–∞–ø–µ
    `.trim()

    // –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–≤–æ–º –æ–±—ä—è–≤–ª–µ–Ω–∏–∏ (–≤—Ä–µ–º–µ–Ω–Ω–æ –≤–º–µ—Å—Ç–æ email)
    console.log('üÜï –ù–û–í–û–ï –û–ë–™–Ø–í–õ–ï–ù–ò–ï:', {
      subject: emailSubject,
      content: emailContent,
      adminEmail: adminEmail,
      timestamp: new Date().toISOString()
    })

    // TODO: –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É email —á–µ—Ä–µ–∑ Supabase Edge Functions
    // –ü–æ–∫–∞ —á—Ç–æ –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º –≤ –∫–æ–Ω—Å–æ–ª—å
    return NextResponse.json({ 
      success: true, 
      message: 'Pet created and admin notification logged (email setup pending)' 
    })

    // –ï—Å–ª–∏ Supabase –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—Ö
    return NextResponse.json({ 
      success: true, 
      message: 'Pet created (email notification skipped - Supabase not configured)' 
    })

  } catch (error: any) {
    console.error('Notify admin API error:', error)
    return NextResponse.json({ error: error.message }, { status: 500 })
  }
}






