#!/bin/bash

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å –ø—Ä–æ–µ–∫—Ç–æ–º
cd /var/www/hvostikalert_usr/data/www/hvostikalert.ru || exit 1

echo "=== –î–ï–ü–õ–û–ô –° –ü–†–û–í–ï–†–ö–û–ô –í–ï–†–°–ò–ò ==="
echo "–í—Ä–µ–º—è: $(date)"
echo ""

echo "üìÅ –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è:"
pwd
echo ""

echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."
if [ -f version.json ]; then
    CURRENT_VERSION=$(grep '"version"' version.json | cut -d'"' -f4)
    echo "–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: $CURRENT_VERSION"
else
    echo "‚ùå version.json –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
fi
echo ""

echo "üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥ –∏–∑ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
echo "–í—ã–ø–æ–ª–Ω—è–µ–º: git pull origin main"
git pull origin main || { echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ git pull"; exit 1; }

echo "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –∫–æ–º–º–∏—Ç–µ:"
git log -1 --pretty=format:"Hash: %h%nMessage: %s%nDate: %ad" --date=short
echo ""

echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è..."
if [ -f version.json ]; then
    NEW_VERSION=$(grep '"version"' version.json | cut -d'"' -f4)
    echo "–ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –ø–æ—Å–ª–µ git pull: $NEW_VERSION"
    
    if [ "$CURRENT_VERSION" != "$NEW_VERSION" ]; then
        echo "‚úÖ –í–µ—Ä—Å–∏—è –∏–∑–º–µ–Ω–∏–ª–∞—Å—å: $CURRENT_VERSION ‚Üí $NEW_VERSION"
    else
        echo "‚ö†Ô∏è –í–µ—Ä—Å–∏—è –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å: $NEW_VERSION"
    fi
else
    echo "‚ùå version.json –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ git pull"
    exit 1
fi
echo ""

echo "üì¶ –ü—Ä–æ–≤–µ—Ä—è–µ–º package.json..."
if [ -f package.json ]; then
    PACKAGE_VERSION=$(grep '"version"' package.json | cut -d'"' -f4)
    echo "‚úÖ package.json –Ω–∞–π–¥–µ–Ω, –≤–µ—Ä—Å–∏—è: $PACKAGE_VERSION"
else
    echo "‚ùå package.json –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi
echo ""

echo "üóëÔ∏è –û—á–∏—â–∞–µ–º –∫—ç—à –∏ —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã..."
if [ -d node_modules ]; then
    echo "–£–¥–∞–ª—è–µ–º node_modules..."
    rm -rf node_modules
fi
if [ -f package-lock.json ]; then
    echo "–£–¥–∞–ª—è–µ–º package-lock.json..."
    rm -f package-lock.json
fi
if [ -d .next ]; then
    echo "–£–¥–∞–ª—è–µ–º .next (–∫—ç—à Next.js)..."
    rm -rf .next
fi
echo ""

echo "üì• –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
echo "–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç..."
npm install --verbose --no-optional --no-audit --no-fund || { 
    echo "‚ùå –û—à–∏–±–∫–∞ npm install"; 
    echo "–ü–æ–ø—Ä–æ–±—É–µ–º —Å --force...";
    npm install --force --no-optional --no-audit --no-fund || {
        echo "‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π";
        exit 1;
    }
}
echo ""

echo "üî® –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ–µ–∫—Ç..."
npm run build || { echo "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏"; exit 1; }
echo ""

echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ..."
pm2 restart hvastik-alert || { echo "‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ pm2"; exit 1; }
echo ""

echo "‚è≥ –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
sleep 5

echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
pm2 status hvastik-alert
echo ""

echo "üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–∞–π—Ç–∞..."
if curl -s -o /dev/null -w "%{http_code}" https://hvostikalert.ru | grep -q "200"; then
    echo "‚úÖ –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω (HTTP 200)"
else
    echo "‚ö†Ô∏è –°–∞–π—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi
echo ""

echo "üìä –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏..."
if [ -f version.json ]; then
    FINAL_VERSION=$(grep '"version"' version.json | cut -d'"' -f4)
    BUILD_DATE=$(grep '"buildDate"' version.json | cut -d'"' -f4)
    BUILD_TIME=$(grep '"buildTime"' version.json | cut -d'"' -f4)
    echo "‚úÖ –§–∏–Ω–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è: $FINAL_VERSION"
    echo "üìÖ –î–∞—Ç–∞ —Å–±–æ—Ä–∫–∏: $BUILD_DATE"
    echo "‚è∞ –í—Ä–µ–º—è —Å–±–æ—Ä–∫–∏: $BUILD_TIME"
else
    echo "‚ùå version.json –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ"
fi
echo ""

echo "‚úÖ –î–ï–ü–õ–û–ô –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!"
echo "–í—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: $(date)"
echo "=== –î–ï–ü–õ–û–ô –ó–ê–í–ï–†–®–ï–ù ==="
