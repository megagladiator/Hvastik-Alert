const { createClient } = require('@supabase/supabase-js');
require('dotenv').config({ path: '.env.local' });

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY; // –ù—É–∂–µ–Ω service role key –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

if (!supabaseUrl || !supabaseServiceKey) {
  console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è SUPABASE_URL –∏–ª–∏ SUPABASE_SERVICE_ROLE_KEY');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseServiceKey);

const testUsers = [
  {
    email: 'testuser1@example.com',
    password: 'TestPassword123!',
    user_metadata: {
      full_name: '–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1',
      role: 'user'
    }
  },
  {
    email: 'testuser2@example.com', 
    password: 'TestPassword123!',
    user_metadata: {
      full_name: '–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2',
      role: 'user'
    }
  },
  {
    email: 'testuser3@example.com',
    password: 'TestPassword123!',
    user_metadata: {
      full_name: '–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 3',
      role: 'user'
    }
  },
  {
    email: 'testadmin@example.com',
    password: 'AdminPassword123!',
    user_metadata: {
      full_name: '–¢–µ—Å—Ç–æ–≤—ã–π –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
      role: 'admin'
    }
  },
  {
    email: 'blockeduser@example.com',
    password: 'BlockedPassword123!',
    user_metadata: {
      full_name: '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
      role: 'user'
    }
  }
];

async function createTestUsers() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...\n');

  for (const userData of testUsers) {
    try {
      console.log(`üìù –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${userData.email}`);
      
      const { data, error } = await supabase.auth.admin.createUser({
        email: userData.email,
        password: userData.password,
        user_metadata: userData.user_metadata,
        email_confirm: true // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º email
      });

      if (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userData.email}:`, error.message);
        continue;
      }

      console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userData.email} —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ (ID: ${data.user.id})`);

      // –ï—Å–ª–∏ —ç—Ç–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –±–ª–æ–∫–∏—Ä—É–µ–º –µ–≥–æ
      if (userData.email === 'blockeduser@example.com') {
        const { error: blockError } = await supabase.auth.admin.updateUserById(
          data.user.id,
          { ban_duration: '876000h' } // –ë–ª–æ–∫–∏—Ä—É–µ–º –Ω–∞ 100 –ª–µ—Ç
        );
        
        if (blockError) {
          console.error(`‚ùå –û—à–∏–±–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userData.email}:`, blockError.message);
        } else {
          console.log(`üîí –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userData.email} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω`);
        }
      }

    } catch (error) {
      console.error(`‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userData.email}:`, error.message);
    }
  }

  console.log('\nüéâ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
  console.log('\nüìã –°–ø–∏—Å–æ–∫ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:');
  console.log('1. testuser1@example.com (–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å) - TestPassword123!');
  console.log('2. testuser2@example.com (–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å) - TestPassword123!');
  console.log('3. testuser3@example.com (–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å) - TestPassword123!');
  console.log('4. testadmin@example.com (–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä) - AdminPassword123!');
  console.log('5. blockeduser@example.com (–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π) - BlockedPassword123!');
  console.log('\nüîë –î–ª—è –≤—Ö–æ–¥–∞ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: agentgl007@gmail.com');
}

createTestUsers().catch(console.error);


