const { createClient } = require('@supabase/supabase-js');
require('dotenv').config({ path: '.env.local' });

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseAnonKey) {
  console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è SUPABASE_URL –∏–ª–∏ SUPABASE_ANON_KEY');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseAnonKey);

const testUsers = [
  {
    email: 'testuser1@gmail.com',
    password: 'TestPassword123!'
  },
  {
    email: 'testuser2@gmail.com', 
    password: 'TestPassword123!'
  },
  {
    email: 'testuser3@gmail.com',
    password: 'TestPassword123!'
  },
  {
    email: 'testadmin@gmail.com',
    password: 'AdminPassword123!'
  },
  {
    email: 'blockeduser@gmail.com',
    password: 'BlockedPassword123!'
  }
];

async function createTestUsers() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ email...\n');

  for (const userData of testUsers) {
    try {
      console.log(`üìù –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${userData.email}`);
      
      const { data, error } = await supabase.auth.signUp({
        email: userData.email,
        password: userData.password,
        options: {
          emailRedirectTo: undefined // –û—Ç–∫–ª—é—á–∞–µ–º —Ä–µ–¥–∏—Ä–µ–∫—Ç –¥–ª—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        }
      });

      if (error) {
        if (error.message.includes('already registered') || error.message.includes('already been registered')) {
          console.log(`‚ö†Ô∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userData.email} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
        } else {
          console.error(`‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ ${userData.email}:`, error.message);
        }
        continue;
      }

      console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userData.email} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ`);
      
      // –ü–æ–ø—Ä–æ–±—É–µ–º –≤–æ–π—Ç–∏, —á—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç
      const { data: signInData, error: signInError } = await supabase.auth.signInWithPassword({
        email: userData.email,
        password: userData.password
      });

      if (signInError) {
        console.log(`‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ –∫–∞–∫ ${userData.email}:`, signInError.message);
      } else {
        console.log(`üîë –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ –∫–∞–∫ ${userData.email}`);
        // –í—ã—Ö–æ–¥–∏–º –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞
        await supabase.auth.signOut();
      }

    } catch (error) {
      console.error(`‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userData.email}:`, error.message);
    }
  }

  console.log('\nüéâ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
  console.log('\nüìã –°–ø–∏—Å–æ–∫ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:');
  console.log('1. testuser1@gmail.com (–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å) - TestPassword123!');
  console.log('2. testuser2@gmail.com (–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å) - TestPassword123!');
  console.log('3. testuser3@gmail.com (–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å) - TestPassword123!');
  console.log('4. testadmin@gmail.com (–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å) - AdminPassword123!');
  console.log('5. blockeduser@gmail.com (–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å) - BlockedPassword123!');
  console.log('\nüîë –î–ª—è –≤—Ö–æ–¥–∞ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: agentgl007@gmail.com');
  console.log('\nüìù –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–æ–∑–¥–∞–Ω—ã —Å —Ä–æ–ª—å—é "user" –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.');
  console.log('üìù –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–æ–ª–µ–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –∏–ª–∏ Supabase Dashboard.');
  console.log('\nüß™ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –º–æ–¥—É–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏!');
}

createTestUsers().catch(console.error);


