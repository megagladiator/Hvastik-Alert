const { createClient } = require('@supabase/supabase-js')

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Supabase
const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY

if (!supabaseUrl || !supabaseServiceKey) {
  console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Supabase')
  console.log('NEXT_PUBLIC_SUPABASE_URL:', supabaseUrl)
  console.log('SUPABASE_SERVICE_ROLE_KEY:', supabaseServiceKey ? '—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
  process.exit(1)
}

const supabase = createClient(supabaseUrl, supabaseServiceKey)

async function checkBucket() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º bucket "pet-photos"...\n')

  try {
    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ bucket'–æ–≤
    const { data: buckets, error: listError } = await supabase.storage.listBuckets()
    
    if (listError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ bucket\'–æ–≤:', listError)
      return
    }

    console.log('üì¶ –î–æ—Å—Ç—É–ø–Ω—ã–µ bucket\'—ã:')
    buckets.forEach(bucket => {
      console.log(`   - ${bucket.name} (–ø—É–±–ª–∏—á–Ω—ã–π: ${bucket.public})`)
    })

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ bucket "pet-photos"
    const petPhotosBucket = buckets.find(b => b.name === 'pet-photos')
    
    if (petPhotosBucket) {
      console.log('\n‚úÖ Bucket "pet-photos" –Ω–∞–π–¥–µ–Ω!')
      console.log(`   - –ü—É–±–ª–∏—á–Ω—ã–π: ${petPhotosBucket.public}`)
      console.log(`   - –°–æ–∑–¥–∞–Ω: ${petPhotosBucket.created_at}`)
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ bucket'–∞
      const { data: files, error: filesError } = await supabase.storage
        .from('pet-photos')
        .list()
      
      if (filesError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤:', filesError)
      } else {
        console.log(`\nüìÅ –§–∞–π–ª–æ–≤ –≤ bucket'–µ: ${files.length}`)
        files.forEach(file => {
          console.log(`   - ${file.name} (${file.metadata?.size || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–∞–∑–º–µ—Ä'})`)
        })
      }
    } else {
      console.log('\n‚ùå Bucket "pet-photos" –Ω–µ –Ω–∞–π–¥–µ–Ω!')
      console.log('üí° –ù—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å bucket –≤ Supabase Dashboard')
    }

  } catch (error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error)
  }
}

checkBucket()
